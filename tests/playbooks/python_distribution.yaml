---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults: &pulp_module_defaults
    pulp.squeezer.python_distribution: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
      validate_certs: "{{ pulp_validate_certs | default(true) }}"
    pulp.squeezer.python_publication:
      <<: *pulp_connection_details
    pulp.squeezer.python_remote:
      <<: *pulp_connection_details
    pulp.squeezer.python_sync:
      <<: *pulp_connection_details
    pulp.squeezer.python_repository:
      <<: *pulp_connection_details
    pulp.squeezer.x509_cert_guard:
      <<: *pulp_connection_details
  tasks:
    - name: Make repository absent
      pulp.squeezer.python_repository:
        name: test_python_repository
        state: absent
    - name: Make distribution absent
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        state: absent
    - name: Make distribution for pull-through absent
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
        state: absent
    - name: Make repository present
      pulp.squeezer.python_repository:
        name: test_python_repository
        state: present
    - name: Make remote present
      pulp.squeezer.python_remote:
        name: test_python_remote
        url: "{{ pulp_fixtures_url }}/python-pypi/"
        proxy_url: ""
        includes:
          - shelf-reader
        state: present
    - name: Make remote for pull-though present
      pulp.squeezer.python_remote:
        name: test_python_remote_pull_through
        url: https://pypi.org
        policy: on_demand
        state: present
    - name: Sync remote into repository
      pulp.squeezer.python_sync:
        remote: test_python_remote
        repository: test_python_repository
    - name: Publish latest version of repository
      pulp.squeezer.python_publication:
        repository: test_python_repository
        state: present
    - name: Make content guard present
      pulp.squeezer.x509_cert_guard:
        name: test_content_guard
        ca_certificate: "{{ lookup('file', 'data/ca.pem') }}"
        state: present
    - name: Clean openapi cache
      ansible.builtin.file:
        path: "{{ lookup('env', 'XDG_CACHE_HOME') | default('~/.cache') }}/squeezer"
        state: absent

- hosts: tests
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Retrieve publication of repository
      pulp.squeezer.python_publication:
        repository: test_python_repository
      register: publication_result

    - name: Distribute publication of repository
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        base_path: test_python_base_path
        publication: "{{ publication_result.publication.pulp_href }}"
        content_guard: test_content_guard
        state: present
      register: result
    - name: Verify distribute publication of repository
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.distribution.name == "test_python_distribution"
          - result.distribution.base_path == "test_python_base_path"
          - ansible_check_mode or result.distribution.base_url is regex(".*/pypi/test_python_base_path")
          - result.distribution.publication == publication_result.publication.pulp_href
          - result.distribution.content_guard is regex("/pulp/api/v3/contentguards/*")

    - name: Distribute publication of repository (2nd try)
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        base_path: test_python_base_path
        publication: "{{ publication_result.publication.pulp_href }}"
        state: present
      register: result
    - name: Verify distribute publication of repository (2nd try)
      ansible.builtin.assert:
        that:
          - result.changed == false

    - name: Read distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution
      register: result
    - name: Verify read distribution
      ansible.builtin.assert:
        that:
          - result.changed == false
          - result.distribution.name == "test_python_distribution"
          - result.distribution.base_path == "test_python_base_path"
          - result.distribution.base_url is regex(".*/pypi/test_python_base_path")
          - result.distribution.publication == publication_result.publication.pulp_href
          - result.distribution.content_guard is regex("/pulp/api/v3/contentguards/*")

    - name: Remove content guard from distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        base_path: test_python_base_path
        publication: "{{ publication_result.publication.pulp_href }}"
        content_guard: ""
        state: present
      register: result
    - name: Verify remove content guard from distribution
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.distribution.name == "test_python_distribution"
          - result.distribution.base_path == "test_python_base_path"
          - ansible_check_mode or result.distribution.base_url is regex(".*/pypi/test_python_base_path")
          - result.distribution.publication == publication_result.publication.pulp_href
          - result.distribution.content_guard == ""

    - name: Delete distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        state: absent
      register: result
    - name: Verify delete distribution
      ansible.builtin.assert:
        that:
          - result.changed == true
          - not result.distribution

    - name: Delete distribution (2nd try)
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        state: absent
      register: result
    - name: Verify delete distribution (2nd try)
      ansible.builtin.assert:
        that:
          - result.changed == false

    - name: Retrieve remote of pull-through mirror
      pulp.squeezer.python_remote:
        name: test_python_remote_pull_through
      register: remote_result

    - name: Create distribution for pull-through mirror
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
        base_path: pull_through_mirror
        remote: test_python_remote_pull_through
        state: present
      register: result
    - name: Verify distribution of pull-through mirror
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.distribution.name == "test_python_distribution_pull_through"
          - result.distribution.base_path == "pull_through_mirror"
          - ansible_check_mode or result.distribution.base_url is regex(".*/pypi/pull_through_mirror")
          - result.distribution.remote == remote_result.remote.pulp_href

    - name: Create distribution for pull-through mirror (2nd try)
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
        base_path: pull_through_mirror
        state: present
      register: result
    - name: Verify distribution of pull-through mirror (2nd try)
      ansible.builtin.assert:
        that:
          - result.changed == false

    - name: Read distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
      register: result
    - name: Verify read distribution
      ansible.builtin.assert:
        that:
          - result.changed == false
          - result.distribution.name == "test_python_distribution_pull_through"
          - result.distribution.base_path == "pull_through_mirror"
          - result.distribution.base_url is regex(".*/pypi/pull_through_mirror")
          - result.distribution.remote == remote_result.remote.pulp_href

    - name: Remove remote from pull-through mirror distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
        base_path: pull_through_mirror
        remote: ""
        state: present
      register: result
    - name: Verify remove remote from pull-through mirror distribution
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.distribution.name == "test_python_distribution_pull_through"
          - result.distribution.base_path == "pull_through_mirror"
          - ansible_check_mode or result.distribution.base_url is regex(".*/pypi/pull_through_mirror")
          - result.distribution.remote == ""

    - name: Retrieve repository
      pulp.squeezer.python_repository:
        name: test_python_repository
      register: repository_result

    - name: Distribute latest version of repository
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        base_path: test_python_base_path
        repository: test_python_repository
        state: present
      register: result
    - name: Verify distribute latest version of repository
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.distribution.name == "test_python_distribution"
          - result.distribution.base_path == "test_python_base_path"
          - ansible_check_mode or result.distribution.base_url is regex(".*/pypi/test_python_base_path")
          - result.distribution.repository == repository_result.repository.pulp_href

    - name: Distribute publication of repository (2nd try)
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        base_path: test_python_base_path
        repository: test_python_repository
        state: present
      register: result
    - name: Verify distribute publication of repository (2nd try)
      ansible.builtin.assert:
        that:
          - result.changed == false

    - name: Read distribution
      pulp.squeezer.python_distribution:
        name: test_python_distribution
      register: result
    - name: Verify read distribution
      ansible.builtin.assert:
        that:
          - result.changed == false
          - result.distribution.name == "test_python_distribution"
          - result.distribution.base_path == "test_python_base_path"
          - result.distribution.base_url is regex(".*/pypi/test_python_base_path")
          - result.distribution.repository == repository_result.repository.pulp_href

- hosts: localhost
  gather_facts: false
  vars_files:
    - vars/server.yaml
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: Make repository absent
      pulp.squeezer.python_repository:
        name: test_python_repository
        state: absent
    - name: Make file_remote absent
      pulp.squeezer.python_remote:
        name: test_python_remote
        state: absent
    - name: Make distribution absent
      pulp.squeezer.python_distribution:
        name: test_python_distribution
        state: absent
    - name: Make distribution for pull-through absent
      pulp.squeezer.python_distribution:
        name: test_python_distribution_pull_through
        state: absent
    - name: Make content guard absent
      pulp.squeezer.x509_cert_guard:
        name: test_content_guard
        state: absent
...
